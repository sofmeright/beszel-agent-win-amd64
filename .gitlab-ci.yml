stages:
  - build
  - release

variables:
  BINARY_NAME: "beszel-agent_windows_amd64.exe"
  GITLAB_DOMAIN: "https://gitlab.prplanit.com"
  OUTPUT_DIR: "agent_windows_amd64-$CI_COMMIT_TAG"
  ZIP_NAME: "$OUTPUT_DIR.zip"

build-release:
  before_script:  |
    echo "Setting up Go build environment..."
    echo "Installing dependencies... (git, zip)"
    apk add --no-cache git zip
  environment: production
  image: golang:1.24.5-alpine3.22
  rules:
    - if: $CI_COMMIT_TAG
  stage: build
  script: |
    echo "Cloning tagged release- $CI_COMMIT_TAG"
    git clone --depth 1 --branch $CI_COMMIT_TAG https://github.com/henrygd/beszel.git
    cd beszel/beszel/cmd/agent

    echo "Building binary..."
    GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-w -s" -o $BINARY_NAME

    echo "Packaging release..."
    mkdir -p "$CI_PROJECT_DIR/$OUTPUT_DIR"
    mv $BINARY_NAME "$CI_PROJECT_DIR/$OUTPUT_DIR/"
    cd "$CI_PROJECT_DIR"
    zip -r "$ZIP_NAME" "$OUTPUT_DIR"

    echo "Release ZIP ready: $ZIP_NAME"
    echo "Artifact to upload:"
    ls -lh "$ZIP_NAME"

  # You can uncomment the artifact section once the 502 issue is resolved
  artifacts:
    paths:
      - "$ZIP_NAME"

create-release:
  stage: release
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
  script: |
    echo "Installing curl and jq..."
    apk add --no-cache curl jq

    echo "Creating release $CI_COMMIT_TAG"
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --request POST \
      --form "name=Release $CI_COMMIT_TAG" \
      --form "tag_name=$CI_COMMIT_TAG" \
      --form "description=Automated release for $CI_COMMIT_TAG" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"

    echo "Uploading asset..."
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
      --upload-file "$ZIP_NAME" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/uploads" > upload_response.json

    UPLOAD_URL=$(jq -r '.url' upload_response.json)

    echo "Adding asset link to release - $UPLOAD_URL"
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
      --request POST \
      --header "Content-Type: application/json" \
      --data "{\"name\":\"$ZIP_NAME\",\"url\":\"$GITLAB_DOMAIN/$CI_PROJECT_PATH$UPLOAD_URL\"}" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"